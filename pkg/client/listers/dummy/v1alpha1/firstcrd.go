/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "client-go/k8s-client-go/pkg/apis/dummy/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// FirstCrdLister helps list FirstCrds.
type FirstCrdLister interface {
	// List lists all FirstCrds in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.FirstCrd, err error)
	// FirstCrds returns an object that can list and get FirstCrds.
	FirstCrds(namespace string) FirstCrdNamespaceLister
	FirstCrdListerExpansion
}

// firstCrdLister implements the FirstCrdLister interface.
type firstCrdLister struct {
	indexer cache.Indexer
}

// NewFirstCrdLister returns a new FirstCrdLister.
func NewFirstCrdLister(indexer cache.Indexer) FirstCrdLister {
	return &firstCrdLister{indexer: indexer}
}

// List lists all FirstCrds in the indexer.
func (s *firstCrdLister) List(selector labels.Selector) (ret []*v1alpha1.FirstCrd, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FirstCrd))
	})
	return ret, err
}

// FirstCrds returns an object that can list and get FirstCrds.
func (s *firstCrdLister) FirstCrds(namespace string) FirstCrdNamespaceLister {
	return firstCrdNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// FirstCrdNamespaceLister helps list and get FirstCrds.
type FirstCrdNamespaceLister interface {
	// List lists all FirstCrds in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.FirstCrd, err error)
	// Get retrieves the FirstCrd from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.FirstCrd, error)
	FirstCrdNamespaceListerExpansion
}

// firstCrdNamespaceLister implements the FirstCrdNamespaceLister
// interface.
type firstCrdNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all FirstCrds in the indexer for a given namespace.
func (s firstCrdNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.FirstCrd, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.FirstCrd))
	})
	return ret, err
}

// Get retrieves the FirstCrd from the indexer for a given namespace and name.
func (s firstCrdNamespaceLister) Get(name string) (*v1alpha1.FirstCrd, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("firstcrd"), name)
	}
	return obj.(*v1alpha1.FirstCrd), nil
}
